[user]
    name = Bulkan Evcimen
    email = bulkan@gmail.com

[core]
    editor = vim

[alias]
    st = status
    ci = commit
    co = checkout
    cib = commit --author bulkan

    # legit alias`

    switch = !legit switch \"$@\"
    branches = !legit branches
    sprout = !legit sprout \"$@\"
    unpublish = !legit unpublish \"$@\"
    harvest = !legit harvest \"$@\"
    sync = !legit sync \"$@\"
    publish = !legit publish \"$@\"
    graft = !legit graft \"$@\"


    # tree based log
    lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative

    # see what happened in a git pull
    news = log -p HEAD@{1}..HEAD@{0}

    # these aliases are from http://durdn.com/blog/2012/11/22/must-have-git-aliases-advanced-examples/

    # Stash operations
    sl = stash list
    sa = stash apply
    ss = stash save

    # List commits in short form, with colors and branch/tag annotations
    ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate

    # List commits showing changed files
    ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat

    # List oneline commits showing dates
    lds = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short

    # Show modified files in last commit
    dl = "!git ll -1"

    # Find a file path in codebase
    f = "!git ls-files | grep -i"

    # Search/grep your entire codebase for a string

    grep = grep -Ii
    gr = grep -Ii


[color]
    branch = auto
    diff = auto
    status = auto
[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red
    new = cyan
[color "status"]
    added = yellow
    changed = green
    untracked = cyan
[push]
  default = current
[pull]
	rebase = true

[url "git@github.com:"]
  insteadOf = https://github.com/
